ActsAsGeocodable
================

gem install graticule --include-dependencies

  ./script/generate geocodable_migration add_geocodable_tables

Set the default geocoder in the bottom of your environment.rb file.

  Geocode.geocoder = Graticule.service(:yahoo).new 'your_api_key'

Then, in each model you want to make geocodable, add "acts_as_geocodable". For example, 

  class Store < ActiveRecord::Base
  	acts_as_geocodable
  end

acts_as_geocodable can also update your address fields with the data returned from the geocoding service:

  class Store < ActiveRecord::Base
  	acts_as_geocodable :normalize_address => true
  end

By default, acts_as_geocodable looks for attributes called street, city, region, postal_code, and country.  To change these, you can provide a mapping in the :address option:

  class Store < ActiveRecord::Base
  	acts_as_geocodable :address => {:street => :address1, :city => :city, :region => :state, :postal_code => :zip}
  end


To Do:

* Documentation!!!
* configurable formulas